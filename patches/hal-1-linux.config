# Configure Linux-libre to be able to run QEMU as a Hurd compatibility layer.
#
# Drivers are enabled to support the following host platforms:
#  * Apple MacBook Air (13" mid-2012)
#  * Lenovo ThinkPad X260
#  * Lenovo Yoga 2 (11")
#  * QEMU (for testing it virtually)
#  * Some custom builds and random hardware I have laying around

### Enable common subsystems required by the following sections.
CONFIG_ACPI=y
CONFIG_BLK_DEV=y
CONFIG_BLOCK=y
CONFIG_DRM=y
CONFIG_EXPERT=y
CONFIG_INPUT=y
CONFIG_NET=y
CONFIG_PCI=y

### Mandatory basics
# Run on multiple 64-bit CPU cores.
CONFIG_64BIT=y
CONFIG_SMP=y
# Act as a KVM hypervisor on AMD and Intel CPUs.
CONFIG_HIGH_RES_TIMERS=y
CONFIG_VIRTUALIZATION=y
CONFIG_KVM=y
CONFIG_KVM_AMD=y
CONFIG_KVM_INTEL=y
# Support the console (for both debugging and text-mode VMs).
CONFIG_FB=y
CONFIG_TTY=y
CONFIG_VT=y
CONFIG_VT_CONSOLE=y
CONFIG_VGA_CONSOLE=y
CONFIG_FRAMEBUFFER_CONSOLE=y
# Print initialization messages to verify hardware is detected.
CONFIG_PRINTK=y

### EFI self-bootloader
# Allow EFI firmware to start the kernel directly.
CONFIG_EFI=y
CONFIG_EFI_STUB=y
# Support using a compressed initrd.
CONFIG_BLK_DEV_RAM=y
CONFIG_BLK_DEV_INITRD=y
CONFIG_RD_GZIP=y
# Load the initrd automatically, so we don't need an EFI bootloader to do it.
CONFIG_CMDLINE_BOOL=y
CONFIG_CMDLINE="initrd=/EFI/gnuxc/hal-initrd.img"

### Userspace requirements
# Support executing busybox/qemu and the init/udhcpc scripts.
CONFIG_BINFMT_ELF=y
CONFIG_BINFMT_SCRIPT=y
# Support the necessary kernel-filesystem interfaces.
CONFIG_DEVTMPFS=y
CONFIG_PROC_FS=y
CONFIG_SYSFS=y
# Support sem_timedwait() for running QEMU.
CONFIG_FUTEX=y
# QEMU wants to use /dev/fb0 for the graphical display.
CONFIG_DRM_FBDEV_EMULATION=y
# QEMU wants to use /dev/input/mice for the mouse input.
CONFIG_INPUT_MOUSEDEV=y
# Support Unix domain sockets (ifconfig), packet sockets (udhcpc), and IPv4/v6.
CONFIG_INET=y
CONFIG_IPV6=y
CONFIG_PACKET=y
CONFIG_UNIX=y
# Name the system in case we want to use it with DHCP later.
CONFIG_DEFAULT_HOSTNAME="gnu"

### QEMU (guest) testing
# Use safe MSR access so "-cpu host" doesn't cause crashes on Intel.
CONFIG_HYPERVISOR_GUEST=y
CONFIG_PARAVIRT=y
# Enable some optimizations on KVM.
CONFIG_KVM_GUEST=y
CONFIG_PARAVIRT_SPINLOCKS=y

### Hardware
CONFIG_PCI_MSI=y
CONFIG_PCI_QUIRKS=y
CONFIG_USB=y
CONFIG_USB_SUPPORT=y
CONFIG_USB_EHCI_HCD=y # USB 2.0
CONFIG_USB_XHCI_HCD=y # USB 3.0
# Input
CONFIG_HID=y
CONFIG_HID_GENERIC=y
CONFIG_INPUT_KEYBOARD=y
CONFIG_INPUT_MOUSE=y
CONFIG_HID_APPLE=y      # apple: MacBook keyboards
CONFIG_HID_GYRATION=y   # misc: wireless keyboard/mouse
CONFIG_HID_MULTITOUCH=y # lenovo: touchscreen
CONFIG_KEYBOARD_ATKBD=y # qemu: AT and PS/2 keyboards
CONFIG_MOUSE_BCM5974=y  # apple: MacBook touchpads
CONFIG_MOUSE_PS2=y      # qemu: PS/2 mice
CONFIG_USB_HID=y        # misc: USB keyboards and mice
# Disk
CONFIG_ATA=y
CONFIG_ATA_BMDMA=y
CONFIG_ATA_SFF=y
CONFIG_BLK_DEV_SD=y
CONFIG_SCSI=y
CONFIG_ATA_PIIX=y    # qemu: default IDE disks
CONFIG_USB_STORAGE=y # misc: USB drives, SD cards, etc.
# Ethernet
CONFIG_ETHERNET=y
CONFIG_NET_VENDOR_AMD=y
CONFIG_NET_VENDOR_INTEL=y
CONFIG_NETDEVICES=y
CONFIG_USB_NET_DRIVERS=y
CONFIG_USB_USBNET=y
CONFIG_E1000=y                # qemu: -device e1000
CONFIG_E1000E=y               # lenovo: Intel PCIe gigabit Ethernet
CONFIG_PCNET32=y              # qemu: -device pcnet
CONFIG_USB_NET_AX88179_178A=y # misc: USB 3.0 gigabit Ethernet adapters
CONFIG_USB_NET_AX8817X=y      # apple: USB Ethernet adapters
# Wireless
CONFIG_WIRELESS=y
CONFIG_CFG80211=y
CONFIG_CFG80211_WEXT=y
CONFIG_MAC80211=y
CONFIG_WLAN=y
CONFIG_WLAN_VENDOR_ATH=y
CONFIG_ATH9K_HTC=y       # misc: USB wireless adapters
# Sound
CONFIG_SOUND=y
CONFIG_SND=y
CONFIG_SND_PCI=y
CONFIG_SND_PCM_OSS=y
CONFIG_SND_HDA_INTEL=y
CONFIG_SND_HDA_GENERIC=y # qemu: -soundhw hda
CONFIG_SND_INTEL8X0=y    # qemu: -soundhw ac97
# Graphics
CONFIG_DRM_BOCHS=y   # qemu: -vga std
CONFIG_DRM_I915=y    # misc: Intel graphics cards
CONFIG_DRM_NOUVEAU=y # misc: Nvidia graphics cards
CONFIG_DRM_QXL=y     # qemu: -vga qxl
CONFIG_DRM_RADEON=y  # misc: AMD/ATI graphics cards
