Allow writing logs to a string port until start-logging is called, and make
this the default behavior for root.  This also sneaks in closing stdout and
stderr, since it seems to break console interaction and crash stuff.

--- modules/shepherd.scm
+++ modules/shepherd.scm
@@ -17,6 +17,9 @@
 ;; You should have received a copy of the GNU General Public License
 ;; along with the GNU Shepherd.  If not, see <http://www.gnu.org/licenses/>.
 
+(set-current-output-port (%make-void-port "w"))
+(set-current-error-port (current-output-port))
+
 (define-module (shepherd)
   #:use-module (ice-9 match)
   #:use-module (ice-9 rdelim)   ;; Line-based I/O.
@@ -95,7 +98,8 @@
 		  (make <option>
 		    #:long "logfile" #:short #\l
 		    #:takes-arg? #t #:optional-arg? #f #:arg-name "FILE"
-		    #:description "log actions in FILE"
+		    #:description
+		    "log actions in FILE or to a buffer if FILE is \"delayed\""
 		    #:action (lambda (file)
 			       (set! logfile file)))
 		  (make <option>
@@ -135,7 +139,9 @@
     (and socket-file
          (verify-dir (dirname socket-file) #:secure? secure))
     ;; Enable logging as first action.
-    (start-logging logfile)
+    (if (string-ci=? logfile "delayed")
+      (start-logging-to-buffer)
+      (start-logging logfile))
 
     ;; Send output to log and clients.
     (set-current-output-port shepherd-output-port)
--- modules/shepherd/comm.scm
+++ modules/shepherd/comm.scm
@@ -49,6 +49,7 @@
             report-command-error
 
             start-logging
+            start-logging-to-buffer
             stop-logging
             %current-client-socket
             shepherd-output-port))
@@ -188,10 +189,20 @@
 ;; Port for logging.  This must always be a valid port, never `#f'.
 (define log-output-port (%make-void-port "w"))
 (define (start-logging file)
-  (let ((directory (dirname file)))
+  (let ((directory (dirname file)) (oldport log-output-port))
     (unless (file-exists? directory)
-      (mkdir directory)))
-  (set! log-output-port (open-file file "al")))   ; line-buffered port
+      (mkdir directory))
+    (set! log-output-port (open-file file "al"))  ; line-buffered port
+    ;; Attempt to dump any buffered log data to the given log file.  This only
+    ;; succeeds if log-output-port was an open output string port, as verified
+    ;; by get-output-string.  Otherwise, logging to a file is started normally.
+    (catch #t
+      (lambda ()
+        (display (get-output-string oldport) log-output-port)
+        (close-output-port oldport))
+      noop)))
+(define (start-logging-to-buffer)
+  (set! log-output-port (open-output-string)))
 (define (stop-logging)
   (close-port log-output-port)
   (set! log-output-port (%make-void-port "w")))
--- modules/shepherd/support.scm
+++ modules/shepherd/support.scm
@@ -272,7 +272,7 @@
 ;; Logfile.
 (define default-logfile
   (if (zero? (getuid))
-      (string-append %localstatedir "/log/shepherd.log")
+      (string-append "delayed")
       (string-append %user-config-dir "/shepherd.log")))
 
 ;; Configuration file.
